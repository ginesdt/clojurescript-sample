  # Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing with clojure, read the docs:
# https://circleci.com/docs/2.0/language-clojure/ for more details
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo


    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          name: Restore npm package cache
          keys:
            - npm-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install node modules
          command: yarn install
      - save_cache:
          name: Save npm package cache
          key: npm-packages-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules/
      - run: npx shadow-cljs compile test-ci
      - run: CHROME_BIN=`which chromium-browser` npx karma start karma.conf.js --single-run


  deploy:
    working_directory: ~/ci

    docker:
      - image: circleci/clojure:lein-node
      
    steps:
      - checkout
      - run:
          name: Build JAR
          command: clojure -T:build jar
      - run:
          name: Release to clojars
          command: clojure -T:build deploy

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

